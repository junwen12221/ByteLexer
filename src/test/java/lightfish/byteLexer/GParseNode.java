package lightfish.byteLexer;
class GParseNode extends P{public  int parse(){int c;if(x<size){c=cc();if(c=='r'){if(x<size){c=cc();if(c=='a'){if(x<size){c=cc();if(c=='n'){if(x<size){c=cc();if(c=='t'){if(x<size){c=cc();if(c=='s'){return endBlank(H.GRANTS);}t=H.GRANT;return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}if(c=='o'){if(x<size){c=cc();if(c=='u'){if(x<size){c=cc();if(c=='p'){if(x<size){c=cc();if(c=='_'){if(x<size){c=cc();if(c=='r'){if(x<size){c=cc();if(c=='e'){if(x<size){c=cc();if(c=='p'){if(x<size){c=cc();if(c=='l'){if(x<size){c=cc();if(c=='i'){if(x<size){c=cc();if(c=='c'){if(x<size){c=cc();if(c=='a'){if(x<size){c=cc();if(c=='t'){if(x<size){c=cc();if(c=='i'){if(x<size){c=cc();if(c=='o'){if(x<size){c=cc();if(c=='n'){return endBlank(H.GROUP_REPLICATION);}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}if(c=='c'){if(x<size){c=cc();if(c=='o'){if(x<size){c=cc();if(c=='n'){if(x<size){c=cc();if(c=='c'){if(x<size){c=cc();if(c=='a'){if(x<size){c=cc();if(c=='t'){return endBlank(H.GROUP_CONCAT);}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}t=H.GROUP;return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}if(c=='e'){if(x<size){c=cc();if(c=='n'){if(x<size){c=cc();if(c=='e'){if(x<size){c=cc();if(c=='r'){if(x<size){c=cc();if(c=='a'){if(x<size){c=cc();if(c=='l'){return endBlank(H.GENERAL);}if(c=='t'){if(x<size){c=cc();if(c=='e'){if(x<size){c=cc();if(c=='d'){return endBlank(H.GENERATED);}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}if(c=='t'){if(x<size){c=cc();if(c=='_'){if(x<size){c=cc();if(c=='f'){if(x<size){c=cc();if(c=='o'){if(x<size){c=cc();if(c=='r'){if(x<size){c=cc();if(c=='m'){if(x<size){c=cc();if(c=='a'){if(x<size){c=cc();if(c=='t'){return endBlank(H.GET_FORMAT);}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}t=H.GET;return x;}return x;}if(c=='o'){if(x<size){c=cc();if(c=='m'){if(x<size){c=cc();if(c=='e'){if(x<size){c=cc();if(c=='t'){if(x<size){c=cc();if(c=='r'){if(x<size){c=cc();if(c=='y'){if(x<size){c=cc();if(c=='c'){if(x<size){c=cc();if(c=='o'){if(x<size){c=cc();if(c=='l'){if(x<size){c=cc();if(c=='l'){if(x<size){c=cc();if(c=='e'){if(x<size){c=cc();if(c=='c'){if(x<size){c=cc();if(c=='t'){if(x<size){c=cc();if(c=='i'){if(x<size){c=cc();if(c=='o'){if(x<size){c=cc();if(c=='n'){return endBlank(H.GEOMETRYCOLLECTION);}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}t=H.GEOMETRY;return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}if(c=='l'){if(x<size){c=cc();if(c=='o'){if(x<size){c=cc();if(c=='b'){if(x<size){c=cc();if(c=='a'){if(x<size){c=cc();if(c=='l'){return endBlank(H.GLOBAL);}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;}endId(c);return x;}return x;};}