package lightfish.byteLexer;
class QParseNode extends P{public  int parse(){int c;if(x<size){c=cc(x);if(c=='u'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if (isBlank(c)){t=H.QUARTER;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}if(c=='e'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='y'){if(x<size){c=cc(x);if (isBlank(c)){t=H.QUERY;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}if(c=='i'){if(x<size){c=cc(x);if(c=='c'){if(x<size){c=cc(x);if(c=='k'){if(x<size){c=cc(x);if (isBlank(c)){t=H.QUICK;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;};}