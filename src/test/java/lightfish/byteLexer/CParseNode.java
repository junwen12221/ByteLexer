package lightfish.byteLexer;
 class CParseNode extends P{  public  int parse(){int c;switch (cc(x)){
case 'u' :{if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='n'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if (isBlank(c)){t=H.CURRENT;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}
case 'l' :{if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if (isBlank(c)){t=H.CLEAR;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}
case 'r' :{if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if (isBlank(c)){t=H.CREATE;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}
case 'a' :{if(x<size){c=cc(x);if(c=='l'){if(x<size){c=cc(x);if(c=='l'){if(x<size){c=cc(x);if (isBlank(c)){t=H.CALL;return x;}}else{return x;}}endId();return x;}return x;}if(c=='t'){if(x<size){c=cc(x);if(c=='l'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if (isBlank(c)){t=H.CATLET;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}if(c=='c'){if(x<size){c=cc(x);if(c=='h'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='_'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if(c=='i'){if(x<size){c=cc(x);if(c=='m'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if (isBlank(c)){t=H.CACHE_TIME;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}
case 'o' :{if(x<size){c=cc(x);if(c=='n'){if(x<size){c=cc(x);if(c=='f'){if(x<size){c=cc(x);if(c=='i'){if(x<size){c=cc(x);if(c=='g'){if(x<size){c=cc(x);if (isBlank(c)){t=H.CONFIG;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}if(c=='n'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='c'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if(c=='i'){if(x<size){c=cc(x);if(c=='o'){if(x<size){c=cc(x);if(c=='n'){if(x<size){c=cc(x);if (isBlank(c)){t=H.CONNECTION;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}if(c=='c'){if(x<size){c=cc(x);if(c=='u'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='n'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if (isBlank(c)){t=H.CONCURRENT;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}if(c=='m'){if(x<size){c=cc(x);if(c=='m'){if(x<size){c=cc(x);if(c=='i'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if (isBlank(c)){t=H.COMMIT;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}
default:endId();return x;
}}}