package lightfish.byteLexer;
 class TParseNode extends P{  public  int parse(){int c;if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='u'){if(x<size){c=cc(x);if(c=='n'){if(x<size){c=cc(x);if(c=='c'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if (isBlank(c)){t=H.TRUNCATE;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}if(c=='a'){if(x<size){c=cc(x);if(c=='b'){if(x<size){c=cc(x);if(c=='l'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if (isBlank(c)){t=H.TABLE;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}if(c=='i'){if(x<size){c=cc(x);if(c=='m'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if (isBlank(c)){t=H.TIME;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}if(c=='h'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='d'){if(x<size){c=cc(x);if(c=='p'){if(x<size){c=cc(x);if(c=='o'){if(x<size){c=cc(x);if(c=='o'){if(x<size){c=cc(x);if(c=='l'){if(x<size){c=cc(x);if (isBlank(c)){t=H.THREADPOOL;return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}}