package lightfish.byteLexer;
class VParseNode extends P{public  int parse(){int c;if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='r'){switch (c=cc(x)){
case 'c' :{if(x<size){c=cc(x);if(c=='h'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='c'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VARCHARACTER;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}t=H.VARCHAR;return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}
case 'b' :{if(x<size){c=cc(x);if(c=='i'){if(x<size){c=cc(x);if(c=='n'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='y'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VARBINARY;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}
case 'i' :{if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='b'){if(x<size){c=cc(x);if(c=='l'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='s'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VARIABLES;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}if(c=='n'){if(x<size){c=cc(x);if(c=='c'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VARIANCE;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}
case 'y' :{if(x<size){c=cc(x);if(c=='i'){if(x<size){c=cc(x);if(c=='n'){if(x<size){c=cc(x);if(c=='g'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VARYING;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}
case '_' :{if(x<size){c=cc(x);if(c=='p'){if(x<size){c=cc(x);if(c=='o'){if(x<size){c=cc(x);if(c=='p'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VAR_POP;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}if(c=='s'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='m'){if(x<size){c=cc(x);if(c=='p'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VAR_SAMP;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}
default:endId();return x;
}}if(c=='l'){if(x<size){c=cc(x);if(c=='i'){if(x<size){c=cc(x);if(c=='d'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if(c=='i'){if(x<size){c=cc(x);if(c=='o'){if(x<size){c=cc(x);if(c=='n'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VALIDATION;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}if(c=='u'){if(x<size){c=cc(x);if(c=='e'){if(x<size){c=cc(x);if(c=='s'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VALUES;return x;}else{endId();return x;}}else{return x;}}t=H.VALUE;return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}if(c=='i'){if(x<size){c=cc(x);if(c=='r'){if(x<size){c=cc(x);if(c=='t'){if(x<size){c=cc(x);if(c=='u'){if(x<size){c=cc(x);if(c=='a'){if(x<size){c=cc(x);if(c=='l'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VIRTUAL;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;}if(c=='e'){if(x<size){c=cc(x);if(c=='w'){if(x<size){c=cc(x);if (isBlank(c)){t=H.VIEW;return x;}else{endId();return x;}}else{return x;}}endId();return x;}return x;}endId();return x;}return x;}endId();return x;}return x;};}